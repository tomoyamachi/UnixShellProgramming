* ディレクションによるファイル操作

** 4.1 ファイルディスクリプタ プロセスと使用するファイルをむすびつける。
予約されているものは3種類あり、0番から2番はそれぞれ以下のようになっている。

| ファイルディスクリプタ | 意味                                         |
|                      0 | 標準入力(指定しなければキーボードからの入力) |
|                      1 | 標準出力(指定しなければ端末への出力)         |
|                      2 | 標準エラー(指定しなければ端末への出力)       |
** リダイレクション
ファイルディスクリプタは指定すると入出力先を変えることができる。
これをリダイレクションという。
リダイレクト記号は「> (出力)」「< (入力)」をつかう。

: echo abcd > filename
: cat filename #=>abcd
ファイルを上書きしたくなければ(ファイルに文字列を追加したければ)、「>>」をつかう。

「>」は指定しなければ「1> filename」(標準出力の先をfilenameにリダイレクションする)という意味である。
エラーの出力先を変えたければ「2> filename」とする。

「<」は「0< filename」の略。

*** まとめてリダイレクト
: cat abc xxx > filename 2>&1
とすると、2を1にリダイレクトしたあと、1をfilenameにリダイレクトしていることになる。
つまり、1と2をまとめてリダイレクトさせている。

** リダイレクションの記述法
| >file   | fileに標準出力を上書き                           |
| >>file  | fileに標準出力を追加                             |
| >&m     | 1(標準出力)をm番目のファイルディスクリプタに書く |
| ?&-     | 標準出力をクローズ                               |
| <file   | fileから標準入力を読み込み                       |
| <&m     | mというファイルディスクリプタから読み込む        |
| <&-     | 標準入力をクローズ                               |
| <<words | ヒアドキュメントから読み込む                     |
これらのコマンドは左から処理されていく。
: cat abc xxx > filename 2>&1
を
: cat abc xxx 2>&1 > filename
とすると、まずエラーが標準出力として端末にでる。
そして、標準出力だけがfilenameにいって、エラーは書き込まれない。

*** パイプで入出力をつなぐ
: command1 | command2
は
: command1 > file
: command2 < file
とおなじ。command1の出力をcommand2が読み込むこととなる。

** execとリダイレクション
exec 現在のシェルプロセスを置き換えて、新しいコマンドを実行させる。
: exec >/dev/null
/dev/nullはゴミ箱。以上のようにすると、シェル上での、すべての標準出力が捨てられてしまう。

** ファイルからの読み込みとread
readは改行コードまでを対象としている。
readを複数行のファイルにたいして実行しようとおもうと、

: while read LINE
: do
:  ....
: done <filename
となる。これはfilenameの1行をLINEへ代入していることがわかる。
ただし、この場合、whileの中で定義した変数、関数は利用できないこととなる。
解決するには
: exec filename
: while read LINE
: do ...
: done
となる。

キーボードからの入力もつかえるようにするには、予約されていないファイルディスクリプタを利用する方法がある。
: exec 3<&0 <file
: # fileを標準入力から3番のファイルディスクリプタとして設定
: while read LINE
: do ...
: done
: exec 0 <&3 3<&-

** リダイレクションのクローズ
コマンドの出力を捨てたければ
command >/dev/null
のほうが安全。


** あたらしくなにもはいってないファイルをつくる
: > filename
: : > filename

** ヒアドキュメント
: command << END
:   this is a $VARIABLE
: EMD

で囲まれた部分。
エスケープは「\」
: command << \END
:   this is a $VARIABLE
: END
: command << END
:   this is a \$VARIABLE
: END

*** vi以外の標準エディタed
: ed file <<-!
: g/^/m0
: w
: q
: !
!で囲まれた部分がヒアドキュメント。
wで上書き保存、qでedコマンドを終了。

g/^/で行頭をさがして、その行をm0で0行目に移動させている。
結果として、すべての行が逆順になる。

** リダイレクションの注意
コマンドへのリダイレクションは、コマンドごとにリダイレクト先を指定しなければならない。
: command1 2> Error | command2 2> Error
標準入力、標準出力は、同じファイルにリダイレクトさせない。
